{"ast":null,"code":"// src/apiService.js\nconst API_URL = process.env.REACT_APP_API_URL || \"http://127.0.0.1:5000\";\nexport const apiService = {\n  async getAnalytics() {\n    const res = await fetch(`${API_URL}/api/analytics`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n        // Add token if required (e.g., from localStorage)\n      }\n    });\n    if (!res.ok) throw new Error(`Failed to fetch analytics: ${res.statusText}`);\n    return res.json();\n  }\n  // Placeholder for future CRUD methods\n};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","apiService","getAnalytics","res","fetch","method","headers","ok","Error","statusText","json"],"sources":["/home/abdou/stage2/jira_final_project/jira_project/src/apiService.js"],"sourcesContent":["// src/apiService.js\nconst API_URL = process.env.REACT_APP_API_URL || \"http://127.0.0.1:5000\";\n\nexport const apiService = {\n  async getAnalytics() {\n    const res = await fetch(`${API_URL}/api/analytics`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // Add token if required (e.g., from localStorage)\n      },\n    });\n    if (!res.ok) throw new Error(`Failed to fetch analytics: ${res.statusText}`);\n    return res.json();\n  },\n  // Placeholder for future CRUD methods\n};"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,OAAO,MAAMC,UAAU,GAAG;EACxB,MAAMC,YAAYA,CAAA,EAAG;IACnB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,gBAAgB,EAAE;MAClDQ,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;QAChB;MACF;IACF,CAAC,CAAC;IACF,IAAI,CAACH,GAAG,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,8BAA8BL,GAAG,CAACM,UAAU,EAAE,CAAC;IAC5E,OAAON,GAAG,CAACO,IAAI,CAAC,CAAC;EACnB;EACA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}