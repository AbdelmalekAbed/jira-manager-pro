{"ast":null,"code":"// src/apiService.js\n\nexport const apiService = {\n  getAnalytics: async () => {\n    try {\n      // Point to your actual backend server\n      const response = await fetch('http://localhost:5000/api/analytics');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const text = await response.text();\n      if (!text.trim()) {\n        throw new Error('Empty response from server');\n      }\n      const data = JSON.parse(text);\n      return data;\n    } catch (error) {\n      console.error('API Service Error:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["apiService","getAnalytics","response","fetch","ok","Error","status","text","trim","data","JSON","parse","error","console"],"sources":["/home/abdou/stage2/jira_final_project/jira_project/src/apiService.js"],"sourcesContent":["// src/apiService.js\n\nexport const apiService = {\n  getAnalytics: async () => {\n    try {\n      // Point to your actual backend server\n      const response = await fetch('http://localhost:5000/api/analytics');\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const text = await response.text();\n      \n      if (!text.trim()) {\n        throw new Error('Empty response from server');\n      }\n      \n      const data = JSON.parse(text);\n      return data;\n    } catch (error) {\n      console.error('API Service Error:', error);\n      throw error;\n    }\n  },\n};"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,UAAU,GAAG;EACxBC,YAAY,EAAE,MAAAA,CAAA,KAAY;IACxB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;MAEnE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAI,CAACA,IAAI,CAACC,IAAI,CAAC,CAAC,EAAE;QAChB,MAAM,IAAIH,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEA,MAAMI,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;MAC7B,OAAOE,IAAI;IACb,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}